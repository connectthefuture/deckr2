import 'game_action.proto';
import 'util.proto';

// Union for all deckr messages that can be sent by the client
// Next field: 5
message ClientMessage {
    enum ClientMessageTypes {
        CREATE = 0;
        JOIN = 1;
        ACTION = 2;
        LEAVE = 3;
        QUIT = 4;
    }

    required ClientMessageTypes message_type = 1;

    optional CreateMessage create_message = 2;
    optional JoinMessage join_message = 3;
    optional ActionMessage action_message = 4;
}

// Next Field: 3
message CreateMessage {
    optional string variant = 1;
    optional int32 max_players = 2;
}

// Next Field: 4
message JoinMessage {
    enum ClientType {
        PLAYER = 0;
        SPECTATOR = 1;
    }

    required int32 game_id = 1;
    required ClientType client_type = 2;
    optional PlayerConfig player_config = 3;
}

// This is the union of possible actions
// Next Field: 6
message ActionMessage {
    enum ActionType {
        START = 0;
        PLAY = 1;
        ACTIVATE = 2;
        DECLARE_ATTACKERS = 3;
        DECLARE_BLOCKERS = 4;
        PASS_PRIORITY = 5;
    }

    required ActionType action_type = 1;

    optional PlayAction play = 2;
    optional ActivateAction activate_ability = 3;
    optional DeclareAttackersAction declare_attackers = 4;
    optional DeclareBlockersAction declare_blockers = 5;
}

message PlayerConfig {
    message CardInfo {
		required string name = 1;
		repeated KeyValuePair meta = 2;
	}

	repeated CardInfo deck = 1;
}
